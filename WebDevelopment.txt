Web Development (UI Technologies)

Savitha Ramesh 
Front end + Back end (Fullstack developer)

HTML , CSS , Responsive framework is Bootstrap, Javascript 

what is front-end?
    user interface(user interaction)

what is back-end?
     server side development mainly deals with database ,scripts and architecture

what is full-stack?
     combination of front end and back end

Webpage using HTML+CSS
Webpage using HTML+CSS+JAVASCRIPT
Webpage using HTML+CSS+JAVASCRIPT+BOOTSTRAP


Course duration : 40-45 days 
class: Mon- Fri
Timings : 9-10 pm 

Advantages with Ashok IT
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
=> Live Online Training
=> Soft Copy Material
=> doubts clarification
=> backup videos + 6 months access
=> telegram group for communication
=> placement assistance
=> resume preparation 

=================================================================================

HTML -> Hyper text Mark up Language => develop static web pages 

 HTML was created by Tim Berners-Lee in late 1991
 it gained specification in 1995 "HTML 2.0"

 "HTML 4.01" late 1999

 why to learn HTML ?
  
   => great software engineer(Web Development) HTML is must 

 Advantages of HTML?

  => Create a website
  => become a web designer
  => master other front-end technologies like javascript,angular,react js, etc

 IDE => Microsoft Visual Studio Code developed by microsoft .its open source

  Offline Editors
  Online Editors
  IDE(Integrated Development Environment)

https://code.visualstudio.com/docs/?dv=win64user

  It can be saved with ".html" or ".htm" extension

 how can we execute HTML?

  with the help of browsers : Google Chrome,IE ,Edge,Mozilla ,Opera

  Plugins in Visual Studio code 
     => Live server extension => run your code
     => Lorem ipsum extension  => genrate dummy text

 After installing visual studio code 
 => Create a folder
 => go to command prompt
 => code .

 we will apply styles to the web page using CSS(Cascading Style Sheets)

  Ex:
     color
     background-color
     margins
     paddings
  
  we will build web pages using the help of tags
   <tagName></tagName>

  current version of HTML is HTML5.x

  HTML5.x supports the API's ,it has become popular in web development 

======================================================================================

  Structure of the webpage 
    <!-- --> => format to write comments

    root section 
    version of HTML => technically called as DOCTYPE <!DOCTYPE>
      => head section => metadata => data about webpage (data)
      => body section => content of the web page

    Meta is self closing tag 
	Headings
	 <!-- Html supports 6 headings
	 
	          <h1></h1>         Main Heading
		  <h2></h2>         Sub Heading
		  <h3></h3>         Sub Heading
		  <h4></h4>         Sub Heading
		  <h5></h5>         Sub Heading
		  <h6></h6>         Sub Heading

   HTML Elements and Attributes 

  Attributes => provide additional information about HTML elements

   <meta name="description" content="Training classes@AshokIT">
    name => information about webpage description

  <meta name="author" content="AshokIT">
    name => information about author

====================================================================
 
 1) Open Editor/Notepad
 2) Apply Formatting
 3) Create one HTML and add paragraph and line breaks(<br/>)
 4) Create Some text and add bold and italic 
==================================================================

  Tags into Categories

 => Working with Text Related Tags
 => Working with Images
 => Working with Links
 => Working with Tables
 => Working with frames,iframe,frameset,div and span
 => Working with forms
 => HTML5 New tags(Semantic Tags)

   Work with text related tags
	   1.Heading Tags : h1,h2,h3,h4,h5,h6
	   2. Font related tags : font,b,i,s,u,small,big,em
	   3. List Tags : ordered list => ol,li unordered list => ul,li ,
         	   data definition list => dl,dt,dd
	   4. Other Tags : span,input,form,header,footer,strong,pre 
	   
	   Semantic Tags in HTML5
	   
	   Screen Reader => header , footer , 
	   
=====================================================================
    Working with Images 
	
	<img > => self  closing tag
	
	syntax:
	 <img 
	 5 attributes src ,alt , title, height ,width 
	 
========================================================================

   Working with Links
   <a href=""> This is Anchor tag </a>
   
====================================================================
   Working with tables 
   
   1.<table> 
   2.<caption>
   3.<thead>
   4.<tr>
   5.<th>
   6.<tbody>
   7.<td>
   
   Task : Create a Profile Page Add Image ,basic details , provide that link in the table

=============================================================================================
    Frame => are used to divide the browser window into multiple sections
             treat as a seperate document

    framset => collection of frames in the browser 	

     <iframe src="branches.html"></iframe>
     <iframe src="courses.html"></iframe>
     <iframe src="headings.html"></iframe>	
	 
================================================================
          form => container for grouping of elements
		  
		  input tags , buttons , select box, textarea
		  
		    id => unique identifier to the browser
		    name => unique to server data
		   
		  syntax:
		  1. form 
		  2. label
		  3. input 
		  
		   <form name="NameOfForm" id="uniqueId" action="AddressOfServer" method="Get/Post">
		   
		   Get => limited data =>insecure 
		   Post => unlimited data => secure 
		   
		   <label> Label Content </label>
		   
		   <input type="text"> Text Field
		   <input type="number"> Number field
		   
	==========================================================================
	
	 div is a block level element 
	 span is an inline element 
	 
	 div is a pair tag
	 used to group elements and to create sections
	 used to create layouts for web pages 
	 
	 Tag                   Description
	 =================================================
     <article>              Defines an article in a document
	 <figure>               Defines self-contained content and figure caption
	 <footer>               Defines a footer for a document
	 <header>               Defines a header for a document
	 <main>                 Defines a main content of a document
	 <mark>                 Defines marked/highlighted text
	 <nav>                  Defines navigation links
	 <section>              Defines a section in a document
	 <summary>              Defines a visible heading
	 
======================================================================================

    CSS => Cascading Style Sheets => to apply the styles to web pages 
	
	what are the ways of declaring CSS
	
	style="property1:value;property2:value;.........propertyn:value"
	
	1. Inline    style="background-color:blue"         1st Precedence 
	2. Internal  <style></style> => head section       2nd Precedence
	3. External  one seperate css file => embed the css file in my html doc 3rd Precedence
	
	When we want to change the precedence we go for important attribute
	
	text-align
	color
	background-color
	font-size
	font-family
	
	     font-weight : bold , bolder
		 border:  size type color => type - dashed , dotted, solid
		 border-radius : left top right bottom;
		 padding: left top right bottom;
		 
    .html => html files
	.css => cascading style sheets
	.js => javascript files 
	
	Types of selectors in CSS 
	1. Element Selector (Tag) => add style to HTML Elements
	   syntax: htmlelement1{
	                    property1:value,
						property2:value 
					   }
	2. Id Selector=> we use user defined ids( id="id1" )
	    syntax:
		        #id1{
				      property1:value;
					  property2:value;
					}
		ids are unique ,only one element can contain one id
		classes , more than one element can contain one class
	3.Class Selector => we have user defined classes
	   syntax:
	           .className{
			               property1:value;
						   property2:value;
						  }
	4.Universal selector
	       HTML => Body => all elements 
	   syntax:
	           *{
			      property1:value;
				  property2:value
				}
				
	 float => div and span 
	 
	 Pseudo classes in CSS
	 
	 
		
         	 
		 

   
   
   



   

  

  









